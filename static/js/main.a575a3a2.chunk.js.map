{"version":3,"sources":["action-types/Content.js","reducers/content.js","reducers/index.js","store/configureStore.js","actions/content.js","components/display/ImageCarousel.js","components/display/RenderListing.js","components/display/Layout.js","containers/Display.js","App.js","serviceWorker.js","index.js"],"names":["ContentTypes","FETCH_LISTINGS","types","initialState","listings","rootReducer","combineReducers","routing","routerReducer","content","state","arguments","length","undefined","action","type","objectAssign","history","createHistory","configureStore","reactRouterMiddleware","routerMiddleware","middlewares","thunk","createStore","compose","applyMiddleware","apply","LISTING_URL","fetchListingsObj","ImageCarousel","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","index","direction","selectedIndex","e","setState","images","_this$state","react_default","a","createElement","Carousel","activeIndex","onSelect","map","image","indx","Item","key","alt","concat","src","href","React","Component","Transition","Slide_default","assign","RenderListing","open","_this2","_this$props","listing","isMobile","classes","name","replace","console","log","style","width","margin","Card_default","className","card","CardHeader_default","avatar","Avatar_default","aria-label","priceRange","low","selling","high","title","CardMedia_default","media","hero","onClick","handleClickOpen","Dialog_default","TransitionComponent","keepMounted","onClose","handleClose","aria-labelledby","aria-describedby","onBackdropClick","DialogTitle_default","id","DialogContent_default","display_ImageCarousel","DialogActions_default","Button_default","color","withStyles","theme","maxWidth","height","paddingTop","actions","display","expand","defineProperty","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","expandOpen","backgroundColor","red","paper","position","spacing","unit","palette","background","boxShadow","shadows","padding","Layout","onWindowResize","window","innerWidth","addEventListener","flexDirection","flexWrap","justifyContent","display_RenderListing","Display","_React$Component","inherits","createClass","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetchListings","stop","display_Layout","groups","connect","dispatch","_ref","request","get","sent","body","_x","App","containers_Display","Boolean","location","hostname","match","store","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a575a3a2.chunk.js","sourcesContent":["const ContentTypes = {\n  FETCH_LISTINGS: 'FETCH_LISTINGS',\n};\n\nexport default ContentTypes;\n","import ContentTypes from '../action-types/Content';\nimport objectAssign from 'object-assign';\n\nconst types = ContentTypes;\n\ntype STATE = {};\ntype ACTION = {};\nconst initialState: STATE = {\n  listings: null,\n};\n\nexport default function(state: STATE = initialState, action: ACTION) {\n  switch (action.type) {\n    case types.FETCH_LISTINGS:\n      return objectAssign({}, state, { listings: action.listings });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport content from './content';\n\nconst rootReducer = combineReducers({\n\trouting: routerReducer,\n\tcontent,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\nimport createHistory from 'history/createBrowserHistory';\n// 'routerMiddleware': the new way of storing route changes with redux middleware since rrV4.\nimport { routerMiddleware } from 'react-router-redux';\nimport rootReducer from '../reducers';\nexport const history = createHistory();\nfunction configureStoreProd(initialState) {\n\tconst reactRouterMiddleware = routerMiddleware(history);\n\tconst middlewares = [\n\t\t// Add other middleware on this line...\n\n\t\t// thunk middleware can also accept an extra argument to be passed to each thunk action\n\t\t// https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\n\t\tthunk,\n\t\treactRouterMiddleware,\n\t];\n\n\treturn createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tcompose(applyMiddleware(...middlewares))\n\t);\n}\n\nfunction configureStoreDev(initialState) {\n\tconst reactRouterMiddleware = routerMiddleware(history);\n\tconst middlewares = [\n\t\t// Add other middleware on this line...\n\n\t\t// Redux middleware that spits an error on you when you try to mutate your state either inside a dispatch or between dispatches.\n\t\treduxImmutableStateInvariant(),\n\n\t\t// thunk middleware can also accept an extra argument to be passed to each thunk action\n\t\t// https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\n\t\tthunk,\n\t\treactRouterMiddleware,\n\t];\n\n\tconst composeEnhancers =\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tcomposeEnhancers(applyMiddleware(...middlewares))\n\t);\n\n\tif (module.hot) {\n\t\t// Enable Webpack hot module replacement for reducers\n\t\tmodule.hot.accept('../reducers', () => {\n\t\t\tconst nextReducer = require('../reducers').default; // eslint-disable-line global-require\n\t\t\tstore.replaceReducer(nextReducer);\n\t\t});\n\t}\n\n\treturn store;\n}\n\nconst configureStore =\n\tprocess.env.NODE_ENV === 'production'\n\t\t? configureStoreProd\n\t\t: configureStoreDev;\n\nexport default configureStore;\n","import request from 'superagent';\nimport ContentTypes from '../action-types/Content';\nconst types = ContentTypes;\n\nconst LISTING_URL = '/services/catalog/v4/category/shop/new/all-new/index.json';\n\nconst fetchListingsObj = (listings) => {\n  return {\n    type: types.FETCH_LISTINGS,\n    listings,\n  };\n};\n\nexport function fetchListings() {\n  return async (dispatch) => {\n    const listings = await request.get(LISTING_URL);\n    dispatch(fetchListingsObj(listings.body));\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Carousel } from 'react-bootstrap';\n\nclass ImageCarousel extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      index: 0,\n      direction: null,\n    };\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({\n      index: selectedIndex,\n      direction: e.direction,\n    });\n  }\n  render() {\n    const { images } = this.props;\n    const { index, direction } = this.state;\n    return (\n      <Carousel\n        activeIndex={index}\n        direction={direction}\n        onSelect={this.handleSelect}\n      >\n        {images.map((image, indx) => {\n          return (\n            <Carousel.Item key={indx}>\n              <img alt={`img_${indx}`} src={image.href} />\n            </Carousel.Item>\n          );\n        })}\n      </Carousel>\n    );\n  }\n}\n\nImageCarousel.propTypes = {\n  images: PropTypes.array,\n};\n\nexport default ImageCarousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Avatar from '@material-ui/core/Avatar';\nimport red from '@material-ui/core/colors/red';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nimport ImageCarousel from './ImageCarousel';\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />;\n}\n\nconst styles = (theme) => ({\n  card: {\n    maxWidth: 400,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n  },\n});\n\nclass RenderListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n  }\n\n  handleClickOpen() {\n    this.setState({ open: true });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const { listing, isMobile, classes } = this.props;\n    const name = listing.name.replace('&#8482;', '');\n    console.log(this.state.open);\n    return (\n      <div\n        style={{\n          width: isMobile ? '100%' : '32%',\n          margin: '15px 10px 0px 0px',\n        }}\n      >\n        <Card className={classes.card}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                ${listing.priceRange.low} \"-\" {listing.priceRange.selling.high}\n              </Avatar>\n            }\n            title={name}\n          />\n          <CardMedia\n            className={classes.media}\n            image={listing.hero.href}\n            title={name}\n            onClick={() => this.handleClickOpen()}\n          />\n        </Card>\n        <Dialog\n          open={this.state.open}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n          onBackdropClick={() => this.handleClose()}\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{name}</DialogTitle>\n          <DialogContent>\n            <ImageCarousel images={listing.images} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleClose()} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nRenderListing.propTypes = {\n  listing: PropTypes.object,\n  isMobile: PropTypes.bool,\n};\n\nexport default withStyles(styles)(RenderListing);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RenderListing from './RenderListing';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { expand: false, isMobile: false };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onWindowResize);\n  }\n\n  onWindowResize = () => {\n    this.setState({ isMobile: window.innerWidth < 480 });\n  };\n\n  render() {\n    console.log(this.props.listings);\n    return (\n      <div\n        style={{\n          display: 'flex',\n          width: this.state.isMobile ? '95%' : '1000px',\n          margin: 'auto',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-around',\n        }}\n      >\n        {this.props.listings &&\n          this.props.listings.map((listing, indx) => {\n            return (\n              <RenderListing\n                key={indx}\n                listing={listing}\n                isMobile={this.state.isMobile}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  listings: PropTypes.array,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchListings } from '../actions/content';\n\nimport Layout from '../components/display/Layout';\n\nexport class Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    await this.props.fetchListings();\n  }\n\n  render() {\n    console.log(this.props.listings);\n    return (\n      <div>\n        {this.props.listings && (\n          <Layout listings={this.props.listings.groups} />\n        )}\n      </div>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  listings: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    listings: state.content.listings,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchListings: () => dispatch(fetchListings()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Display);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Display from './containers/Display';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Display />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst store = configureStore();\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}